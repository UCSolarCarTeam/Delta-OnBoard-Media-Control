!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
INT64_C	Main.cpp	8;"	d	file:
RUNNINGONINTEL	Main.cpp	24;"	d	file:
RUNNINGONPI	Main.cpp	28;"	d	file:
SCREEN_HEIGHT	Main.cpp	36;"	d	file:
SCREEN_WIDTH	Main.cpp	37;"	d	file:
SongLoader	SongLoader.cpp	/^SongLoader::SongLoader()$/;"	f	class:SongLoader
SongPlayer	SongPlayer.cpp	/^SongPlayer::SongPlayer()$/;"	f	class:SongPlayer
UINT64_C	Main.cpp	9;"	d	file:
back	SongPlayer.cpp	/^int SongPlayer::back()$/;"	f	class:SongPlayer
cameraHeight	Main.cpp	/^int cameraHeight;$/;"	v
cameraWidth	Main.cpp	/^int cameraWidth;$/;"	v
cameraWorker	Main.cpp	/^int cameraWorker(void* data) $/;"	f
close	Main.cpp	/^void close()$/;"	f
frame	Main.cpp	/^Mat frame;$/;"	v
freeMusic	SongPlayer.cpp	/^int SongPlayer::freeMusic()$/;"	f	class:SongPlayer
getCurrentTime	SongPlayer.cpp	/^int SongPlayer::getCurrentTime()$/;"	f	class:SongPlayer
getSongLength	SongPlayer.cpp	/^int SongPlayer::getSongLength()$/;"	f	class:SongPlayer
init_SDL	Main.cpp	/^bool init_SDL()$/;"	f
load	SongPlayer.cpp	/^int SongPlayer::load(std::string songName)$/;"	f	class:SongPlayer
main	Main.cpp	/^ int main(int argc, char* argv[])$/;"	f
next	SongPlayer.cpp	/^int SongPlayer::next()$/;"	f	class:SongPlayer
nextSong	SongLoader.cpp	/^std::string SongLoader::nextSong()$/;"	f	class:SongLoader
pause	SongPlayer.cpp	/^int SongPlayer::pause()$/;"	f	class:SongPlayer
play	SongPlayer.cpp	/^int SongPlayer::play()$/;"	f	class:SongPlayer
quit	Main.cpp	/^int quit;$/;"	v
readSongNames	SongLoader.cpp	/^int SongLoader::readSongNames()$/;"	f	class:SongLoader
renderer	Main.cpp	/^SDL_Renderer* renderer = NULL;$/;"	v
show_Camera	Main.cpp	/^int show_Camera(IplImage* img)$/;"	f
shuffleSongNames	SongLoader.cpp	/^int SongLoader::shuffleSongNames()$/;"	f	class:SongLoader
songBuffer	SongPlayer.cpp	/^unsigned char *songBuffer;$/;"	v
threadImage1	Main.cpp	/^IplImage threadImage1;$/;"	v
updatedImage1	Main.cpp	/^bool updatedImage1 = false;$/;"	v
videoRect	Main.cpp	/^SDL_Rect videoRect;$/;"	v
window	Main.cpp	/^SDL_Window* window = NULL;$/;"	v
~SongPlayer	SongPlayer.cpp	/^SongPlayer::~SongPlayer()$/;"	f	class:SongPlayer
